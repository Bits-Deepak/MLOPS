# CI/CD Workflow for Machine Learning Project
name: CI/CD Workflow for Machine Learning Project

# Trigger workflow on specific branches and events
on:
  push:
    branches:
      - main
      - dev
      - prod
  pull_request:
    branches:
      - main
      - dev
      - prod

# Define jobs in the workflow
jobs:
  lint:
    name: Code Linting
    runs-on: windows-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install necessary tools
        run: |
          python -m pip install --upgrade pip setuptools wheel flake8

      - name: Run linter
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

  test:
    name: Unit Testing
    runs-on: windows-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Suppress TensorFlow logs
        env:
          TF_CPP_MIN_LOG_LEVEL: 3
        run: |
          echo "TensorFlow logs suppressed for cleaner output."

      - name: Run unit tests
        run: |
          python -m unittest discover -s tests -p "test_*.py"

  deploy:
    name: Deployment for Production
    runs-on: windows-latest
    needs: [lint, test]  # Deploy only if linting and tests succeed

    # Conditional execution for prod branch
    if: github.ref == 'refs/heads/prod'

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Deploy to Production
        run: |
          echo "Deploying the machine learning model to production environment..."
          # Add your real production deployment steps here (e.g., Docker, Azure, AWS)
